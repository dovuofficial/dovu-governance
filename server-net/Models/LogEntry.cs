using Hashgraph;
using System.Text.Json.Serialization;
using VotingStream.Mappers;

namespace VotingStreamServer.Models;

/// <summary>
/// Represents a log entry generated by the server.
/// </summary>
public record LogEntry
{
    /// <summary>
    /// Timestamp at which the log entry was received.
    /// </summary>
    private readonly ConsensusTimeStamp _timestamp;
    /// <summary>
    /// The category name assigned to the log entry.
    /// </summary>
    private readonly string _categoryName;
    /// <summary>
    /// The designated log level for the log entry.
    /// </summary>
    private readonly LogLevel _logLevel;
    /// <summary>
    /// The details of the log entry.
    /// </summary>
    private readonly string _message;
    /// <summary>
    /// Timestamp at which the log entry was received.
    /// </summary>
    [JsonPropertyName("timestamp")]
    [JsonConverter(typeof(ConsensusTimeStampConverter))]
    public ConsensusTimeStamp TimeStamp => _timestamp;
    /// <summary>
    /// The category name assigned to the log entry.
    /// </summary>
    [JsonPropertyName("category")]
    public string CategoryName => _categoryName;
    /// <summary>
    /// The designated log level for the log entry.
    /// </summary>
    [JsonPropertyName("level")]
    public string LogLevel => _logLevel.ToString();
    /// <summary>
    /// The details of the log entry.
    /// </summary>
    [JsonPropertyName("message")]
    public string Message => _message;
    /// <summary>
    /// Constructor, created from a standard asp.net logging entry.
    /// </summary>
    /// <param name="categoryName">
    /// The category name assigned to the log entry.
    /// </param>
    /// <param name="logLevel">
    /// The designated log level for the log entry.
    /// </param>
    /// <param name="message">
    /// The details of the log entry.
    /// </param>
    public LogEntry(string categoryName, LogLevel logLevel, string message)
    {
        _timestamp = ConsensusTimeStamp.Now;
        _categoryName = categoryName;
        _logLevel = logLevel;
        _message = message;
    }
}
